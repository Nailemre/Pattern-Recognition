# -*- coding: utf-8 -*-
"""Pattern_Recognition_HW1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ghXH5JzOajeRhSSTDIQJIM7cf21iLUJO
"""
#Nail Emre KayapÄ±nar 26.03.2021
import matplotlib.pyplot as plt
import numpy as np
import cv2

#Read image 
cat1 = plt.imread('/cat1.jpg')
cat2 = plt.imread('/cat2.jpg')
cat3 = plt.imread('/cat3.jpg')
dog1 = plt.imread('/dog1.jpg')

# If you want to see image, you can delete '#' symbol.
#plt.imshow(cat1)
#plt.show()

#Image convert to vector format.
length,height,depth=dog1.shape
dog1_vec=dog1.reshape(length*height*depth,1)
#Compute a histogram array which is in 1x256 format(starting from 0 to 256)
dog1_his=plt.hist(dog1_vec.ravel(),256,[0,256])
plt.grid (axis = 'x', alpha = 0.75)
plt.grid (axis = 'y', alpha = 0.75)
plt.xlabel ('Value', fontsize = 12)
plt.ylabel ('Frequency', fontsize = 12)
plt.title ("Dog 1 ", fontsize = 12)
plt.show()

#Image convert to vector format.
length1,height1,depth1=cat1.shape
cat1_vec=cat1.reshape(length1*height1*depth1,1)
#Compute a histogram array which is in 1x256 format(starting from 0 to 256)
cat1_his=plt.hist(cat1_vec.ravel(),256,[0,256])
plt.grid (axis = 'x', alpha = 0.75)
plt.grid (axis = 'y', alpha = 0.75)
plt.xlabel ('Value', fontsize = 12)
plt.ylabel ('Frequency', fontsize = 12)
plt.title ("Cat 1 ", fontsize = 12)
plt.show()

#Image convert to vector format.
length2,height2,depth2=cat2.shape
cat2_vec=cat2.reshape(length2*height2*depth2,1)
#Compute a histogram array which is in 1x256 format(starting from 0 to 256)
plt.hist(cat2_vec.ravel(),256,[0,256])
plt.grid (axis = 'x', alpha = 0.75)
plt.grid (axis = 'y', alpha = 0.75)
plt.xlabel ('Value', fontsize = 12)
plt.ylabel ('Frequency', fontsize = 12)
plt.title ("Cat 2 ", fontsize = 12)
plt.show()

#Image convert to vector format.
length3,height3,depth3=cat3.shape
cat3_vec=cat3.reshape(length3*height3*depth3,1)
#Compute a histogram array which is in 1x256 format(starting from 0 to 256)
cat3_his=plt.hist(cat3_vec.ravel(),256,[0,256])
plt.grid (axis = 'x', alpha = 0.75)
plt.grid (axis = 'y', alpha = 0.75)
plt.xlabel ('Value', fontsize = 12)
plt.ylabel ('Frequency', fontsize = 12)
plt.title ("Cat 3 ", fontsize = 12)
plt.show()

# Convert it to HSV
cat1_hsv = cv2.cvtColor(cat1, cv2.COLOR_BGR2HSV)
cat2_hsv = cv2.cvtColor(cat2, cv2.COLOR_BGR2HSV)
cat3_hsv = cv2.cvtColor(cat3, cv2.COLOR_BGR2HSV)
dog1_hsv = cv2.cvtColor(dog1, cv2.COLOR_BGR2HSV)
 
# Calculate the histogram 
hist_cat1 = cv2.calcHist([cat1_hsv], [0,1], None, [180,256], [0,180,0,256])
hist_cat2 = cv2.calcHist([cat2_hsv], [0,1], None, [180,256], [0,180,0,256])
hist_cat3 = cv2.calcHist([cat3_hsv], [0,1], None, [180,256], [0,180,0,256])
hist_dog1 = cv2.calcHist([dog1_hsv], [0,1], None, [180,256], [0,180,0,256])

# find the BHATTACHARYYA distance
d1 = cv2.compareHist(hist_dog1, hist_cat1, cv2.HISTCMP_BHATTACHARYYA)
d2 = cv2.compareHist(hist_dog1, hist_cat2, cv2.HISTCMP_BHATTACHARYYA)
d3 = cv2.compareHist(hist_dog1, hist_cat3, cv2.HISTCMP_BHATTACHARYYA)
distance_array=np.array([d1,d2,d3])
min_distance=np.amin(distance_array)
print('cat'+ str(np.where(distance_array==min_distance)[0])+'.jpg is best matched')